<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.github.admin.serveice.dao.UserDao">

    <resultMap id="BaseResultMap" type="User">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="username" property="userName" jdbcType="VARCHAR"/>
        <result column="password" property="password" jdbcType="VARCHAR" />
        <result column="salt" property="salt" jdbcType="VARCHAR" />
        <result column="nickname" property="nickName" jdbcType="VARCHAR"/>
        <result column="picture" property="picture" jdbcType="VARCHAR"/>
        <result column="sex" property="sex" jdbcType="TINYINT"/>
        <result column="phone" property="phone" jdbcType="VARCHAR"/>
        <result column="email" property="email" jdbcType="VARCHAR" />
        <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
        <result column="update_date" property="updateDate" jdbcType="TIMESTAMP" />
        <result column="remark" property="remark" jdbcType="VARCHAR" />
        <result column="status" property="status" jdbcType="TINYINT" />
        <result column="dept_id" property="deptId" jdbcType="INTEGER" />
    </resultMap>

    <resultMap id="BaseUserResultMap" type="User">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="username" property="userName" jdbcType="VARCHAR"/>
        <result column="nickname" property="nickName" jdbcType="VARCHAR"/>
        <result column="picture" property="picture" jdbcType="VARCHAR"/>
        <result column="sex" property="sex" jdbcType="TINYINT"/>
        <result column="phone" property="phone" jdbcType="VARCHAR"/>
        <result column="email" property="email" jdbcType="VARCHAR" />
        <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
        <result column="update_date" property="updateDate" jdbcType="TIMESTAMP" />
        <result column="remark" property="remark" jdbcType="VARCHAR" />
        <result column="status" property="status" jdbcType="TINYINT" />
        <result column="dept_id" property="deptId" jdbcType="INTEGER" />
    </resultMap>

    <select id="findByUserName" resultMap="BaseResultMap" parameterType="java.lang.String">
        select *
        from sys_user where username = #{userName}
    </select>

    <select id="findUserCountByUserName" parameterType="java.lang.String" resultType="java.lang.Integer">
        select count(*)
        from sys_user where username = #{userName}
    </select>

    <select id="findUserCountByUserNameAndNotId" parameterType="map" resultType="java.lang.Integer">
        select count(*)
        from sys_user where username = #{userName} and id != #{id}
    </select>


    <select id="findUserById" resultMap="BaseUserResultMap" parameterType="java.lang.Long">
        select *
        from sys_user where id = #{id}
    </select>


    <select id="getPageCount" parameterType="map" resultType="java.lang.Long">
        select count(*) from sys_user
        <where>
            <if test="status != null">
                and status = #{status}
            </if>
            <if test="status != null">
                and status = #{status}
            </if>
            <if test="userName != null and userName != ''">
                and username like concat(concat('%',#{userName}),'%')
            </if>
            <if test="nickName != null and nickName != ''">
                and nickname like concat(concat('%',#{nickName}),'%')
            </if>
            and status != 3
        </where>
    </select>

    <select id="getPageList" parameterType="map" resultMap="BaseUserResultMap">
        select  * from  sys_user
        <where>
            <if test="status != null">
                and status = #{status}
            </if>
            <if test="userName != null and userName != ''">
                and username like concat(concat('%',#{userName}),'%')
            </if>
            <if test="nickName != null and nickName != ''">
                and nickname like concat(concat('%',#{nickName}),'%')
            </if>
            and status != 3
        </where>
        <if test="orderByColumn != null and asc != null">
            order by ${orderByColumn} ${asc}
        </if>
        <if test="startIndex != null and endIndex != null">
            limit #{startIndex},#{endIndex}
        </if>

    </select>

    <update id="updateUser" parameterType="User">
        update sys_user
        <set>
            <if test="userName != null and userName != ''">
                username = #{userName},
            </if>
            <if test="nickName != null and nickName != ''">
                nickname = #{nickName},
            </if>
            <if test="deptId != null">
                dept_id = #{deptId},
            </if>
            <if test="picture != null and picture != ''">
                picture = #{picture},
            </if>
            <if test="sex != null">
                sex = #{sex},
            </if>
            <if test="email != null and email != ''">
                email = #{email},
            </if>
            <if test="phone != null and phone != ''">
                phone = #{phone},
            </if>
            <if test="remark != null and remark != ''">
                remark = #{remark},
            </if>
            <if test="createDate != null">
                create_date = #{create_date},
            </if>
            <if test="updateDate != null">
                update_date = #{updateDate},
            </if>
            <if test="password != null and password != ''">
                password = #{password},
            </if>
            <if test="salt != null and salt != ''">
                salt = #{salt},
            </if>
            <if test="status != null">
                status = #{status},
            </if>
        </set>
        where id = #{id}
    </update>


    <insert id="saveUser" parameterType="User">
        insert into sys_user(username, nickname, password, salt, dept_id, picture, sex, email, phone, remark,
                             create_date, update_date, status)
        values (#{userName}, #{nickName}, #{password}, #{salt}, #{deptId}, #{picture}, #{sex}, #{email}, #{phone},
                #{remark}, #{createDate}, #{updateDate}, #{status})
    </insert>

</mapper>